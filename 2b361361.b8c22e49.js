(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{111:function(e,r,t){"use strict";t.r(r),t.d(r,"frontMatter",(function(){return c})),t.d(r,"metadata",(function(){return s})),t.d(r,"rightToc",(function(){return i})),t.d(r,"default",(function(){return u}));var n=t(2),a=t(6),o=(t(0),t(124)),c={id:"tree-search",title:"Tree Search",sidebar_label:"Tree Search"},s={id:"algorithms/tree-search",title:"Tree Search",description:"There are two algorithms for searching a tree for a node:",source:"@site/docs/algorithms/tree-search.md",permalink:"/docs/algorithms/tree-search",editUrl:"https://github.com/ajmhyd/studyguide/edit/master/website/docs/algorithms/tree-search.md",sidebar_label:"Tree Search",sidebar:"someSidebar",previous:{title:"Quick Sort",permalink:"/docs/algorithms/quick-sort"},next:{title:"Tree Traversals",permalink:"/docs/algorithms/tree-traversals"}},i=[{value:"Depth-First Search (DFS)",id:"depth-first-search-dfs",children:[{value:"DFS Code",id:"dfs-code",children:[]}]},{value:"Breadth-First Search (BFS)",id:"breadth-first-search-bfs",children:[{value:"BFS Code",id:"bfs-code",children:[]}]}],l={rightToc:i};function u(e){var r=e.components,t=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},l,t,{components:r,mdxType:"MDXLayout"}),Object(o.b)("p",null,"There are two algorithms for searching a tree for a node:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"Depth-first search ",Object(o.b)("inlineCode",{parentName:"p"},"DFS"))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"Breadth-first search ",Object(o.b)("inlineCode",{parentName:"p"},"BFS")))),Object(o.b)("h2",{id:"depth-first-search-dfs"},"Depth-First Search (DFS)"),Object(o.b)("p",null,"In depth-first search we travel as far down each branch ",Object(o.b)("em",{parentName:"p"},"starting with the left")," as possible before moving on to the right branch"),Object(o.b)("h3",{id:"dfs-code"},"DFS Code"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"function DFS(graph, startValue) {\n  let startNode = graph.getNode(startValue);\n  let visitedNodesHash = graph.nodes.reduce((accumulator, currentNode) => {\n    accumulator[currentNode.value] = false;\n    return accumulator;\n  }, {});\n  /*\n    {\n      a: false,\n      b: false,\n      c: false,\n      d: false,\n      e: false,\n      f: false\n    }\n  */\n function exploreNode(node) {\n   if (visitedNodesHash[node.value]) return;\n\n   console.log(`${node.value} => `);\n   visitedNodesHash[node.value] = true;\n   node.edges.forEach(edge => exploreNode(edge));\n }\n\n exploreNode(startNode);\n}\n")),Object(o.b)("h2",{id:"breadth-first-search-bfs"},"Breadth-First Search (BFS)"),Object(o.b)("p",null,"In Breadth-first search we explore all nodes on the same tree level before moving to a deeper level"),Object(o.b)("h3",{id:"bfs-code"},"BFS Code"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"function BFS(graph, startValue) {\n  let startNode = graph.getNode(startValue);\n  let visitedNodesHash = graph.nodes.reduce((accumulator, currentNode) => {\n    accumulator[currentNode.value] = false;\n  }, {});\n   /*\n    {\n      a: false,\n      b: false,\n      c: false,\n      d: false,\n      e: false,\n      f: false\n    }\n  */\n const queue = new Queue();\n queue.enqueue(startNode);\n while (!queue.isEmpty()) {\n   let currentNode = queue.dequeue();\n   if (!visitedNodesHash[currentNode.value]) {\n     console.log(`${currentNode.value} => `);\n     visitedNodesHash[currentNode.value] = true;\n   }\n\n   currentNode.edges.forEach(node => {\n     if (!visitedNodesHash[node.value]) {\n       queue.enqueue(node);\n     }\n   });\n }\n}\n\n")))}u.isMDXComponent=!0},124:function(e,r,t){"use strict";t.d(r,"a",(function(){return d})),t.d(r,"b",(function(){return b}));var n=t(0),a=t.n(n);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function c(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function s(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?c(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=a.a.createContext({}),u=function(e){var r=a.a.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):s(s({},r),e)),t},d=function(e){var r=u(e.components);return a.a.createElement(l.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return a.a.createElement(a.a.Fragment,{},r)}},f=a.a.forwardRef((function(e,r){var t=e.components,n=e.mdxType,o=e.originalType,c=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),d=u(t),f=n,b=d["".concat(c,".").concat(f)]||d[f]||p[f]||o;return t?a.a.createElement(b,s(s({ref:r},l),{},{components:t})):a.a.createElement(b,s({ref:r},l))}));function b(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var o=t.length,c=new Array(o);c[0]=f;var s={};for(var i in r)hasOwnProperty.call(r,i)&&(s[i]=r[i]);s.originalType=e,s.mdxType="string"==typeof e?e:n,c[1]=s;for(var l=2;l<o;l++)c[l]=t[l];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,t)}f.displayName="MDXCreateElement"}}]);